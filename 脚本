local e=[[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]] local k='dwdwaawddaw' local d={} local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' for i=1,#e,4 do local c1,c2,c3,c4=string.byte(e,i,i+3) c1=b:find(string.char(c1))-1 c2=b:find(string.char(c2))-1 c3=b:find(string.char(c3))-1 c4=b:find(string.char(c4))-1 local n=bit32.lshift(c1,18)+bit32.lshift(c2,12)+bit32.lshift(c3,6)+c4 table.insert(d,string.char(bit32.rshift(bit32.band(n,0xFF0000),16))) if c3~=64 then table.insert(d,string.char(bit32.rshift(bit32.band(n,0xFF00),8))) end if c4~=64 then table.insert(d,string.char(bit32.band(n,0xFF))) end end d=table.concat(d) local r={} for i=1,#d do r[i]=string.char(string.byte(d,i)^string.byte(k,((i-1)%#k)+1)) end local f=loadstring(table.concat(r)) if f then return f() else error("解密失败") end
